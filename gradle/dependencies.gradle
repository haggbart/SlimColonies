configurations {
    library
    implementation.extendsFrom library
}

minecraft.runs.all {
    lazyToken('minecraft_classpath') {
        configurations.library.copyRecursive().resolve().collect { it.absolutePath }.join(File.pathSeparator)
    }
}

// Use WARN to catch any future duplicate resource issues
project.tasks.getByName("processResources", { task ->
    task.duplicatesStrategy = DuplicatesStrategy.WARN
})

repositories {
    maven { url = 'https://files.minecraftforge.net/maven' }
    maven { url = 'https://maven.blamejared.com' } // JEI
    maven { url = 'https://jm.gserv.me/repository/maven-public/' } // JourneyMap
    maven { url = 'https://ldtteam.jfrog.io/artifactory/ldtteam/' } // MineColonies dependencies
    maven { url = 'https://maven.architectury.dev/' }
    maven { url = 'https://maven.shedaniel.me/' } // Rei
    maven { url = 'https://maven.pkg.jetbrains.space/public/p/kotlinx-html/maven' }
    maven { url = 'https://plugins.gradle.org/m2/' }
    maven {
        name = "CurseMaven"
        url = "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    mavenCentral()
    mavenLocal()
}

dependencies {
    compileOnly(fg.deobf("com.ldtteam:domum_ornamentum:${project.domumOrnamentumVersion}:universal")) {
        transitive = false
    }
    runtimeOnly(fg.deobf("com.ldtteam:domum_ornamentum:${project.domumOrnamentumVersion}:universal")) {
        transitive = false
    }

    implementation(fg.deobf("com.ldtteam:blockui:${project.blockUI_version}")) {
        transitive = false
    }

    implementation(fg.deobf("com.ldtteam:structurize:${project.structurize_version}")) {
        transitive = false
    }

    implementation(fg.deobf("com.ldtteam:multipiston:${project.multiPistonVersion}")) {
        transitive = false
    }

    implementation fg.deobf("com.ldtteam:datagenerators:${project.dataGeneratorsVersion}:universal") {
        transitive = false
    }

    // optional compat mods (not included in test environment by default)

    compileOnly fg.deobf("mezz.jei:jei-${project.jei_mcversion}-common-api:${project.jei_version}")
    compileOnly fg.deobf("mezz.jei:jei-${project.jei_mcversion}-forge-api:${project.jei_version}")
    runtimeOnly fg.deobf("mezz.jei:jei-${project.jei_mcversion}-forge:${project.jei_version}")

    compileOnly fg.deobf("info.journeymap:journeymap-api:${project.jmapApiVersion}")
    if (project.hasProperty("runWithJourneymap") && project.runWithJourneymap.toBoolean()) {
        runtimeOnly fg.deobf("flat:journeymap:${project.jmapMcVersion}-${project.jmapVersion}-forge")
    }
    // Farmer's Delight - for development/debugging
    runtimeOnly fg.deobf("curse.maven:farmers-delight-398521:6917255")

    // Jade - for development/debugging
    runtimeOnly fg.deobf("curse.maven:jade-324717:6855440")

    // JourneyMap - for development/debugging
    runtimeOnly fg.deobf("curse.maven:journeymap-32274:5789363")
}
